schedules:
- cron: '0 0 * * *'
  displayName: Nightly Windows CI in main branch
  branches:
    include:
    - main

trigger:
- gh-readonly-queue/**

jobs:

- job: 'Test'
  pool:
    vmImage: 'windows-2019'
  strategy:
    matrix:
      py311-ml-external-protobuf:
        python.version: '3.11'
        onnx_ml: 1
        onnx_verify_proto: 0
        protobuf_type: 'External'
      py310_verify_proto_internal_protobuf:
        python.version: '3.10'
        onnx_ml: 0
        onnx_verify_proto: 1
        protobuf_type: 'Internal'
      py39_ml_external_protobuf:
        python.version: '3.9'
        onnx_ml: 1
        onnx_verify_proto: 0
        protobuf_type: 'External'
      py38_verify_proto_internal_protobuf:
        python.version: '3.8'
        onnx_ml: 0
        onnx_verify_proto: 1
        protobuf_type: 'Internal'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: |
      conda create --yes --quiet --name py$(python.version) python=$(python.version)
      if '$(protobuf_type)' == 'External' (
        conda install -n py$(python.version) -y -c conda-forge numpy libprotobuf==3.21.5
      ) else (
        conda install -n py$(python.version) -y -c conda-forge numpy
      )
    displayName: Create Anaconda environment

  - script: |
      call activate py$(python.version)
      python -m pip install --upgrade pip
      python -m pip install -r requirements-release.txt

      git submodule update --init --recursive
      set ONNX_BUILD_TESTS=1
      set ONNX_ML=$(onnx_ml)
      set ONNX_VERIFY_PROTO_3=$(onnx_verify_proto)
      if '$(protobuf_type)' == 'External' (
        set CMAKE_ARGS=-DONNX_USE_PROTOBUF_SHARED_LIBS=ON -DONNX_USE_LITE_PROTO=ON -DONNX_WERROR=ON
      ) else (
        REM Disable ONNX_WERROR since the new protobuf version has build warnings that are treated as errors.
        set CMAKE_ARGS=-DONNX_USE_PROTOBUF_SHARED_LIBS=OFF -DONNX_USE_LITE_PROTO=ON -DONNX_WERROR=OFF
      )

      pip install -e ".[reference]" -v
      pytest -n auto --dist loadscope
      IF NOT %ERRORLEVEL% EQU 0 (
        @echo "pytest failed"
        EXIT 1
      )

      python onnx/backend/test/cmd_tools.py generate-data --clean
      git status
      git diff --exit-code -- . :!onnx/onnx-data.proto :!onnx/onnx-data.proto3 :!*output_*.pb :!*input_*.pb
      IF NOT %ERRORLEVEL% EQU 0 (
        @echo "git diff for test generation returned failures. Please check updated node test files"
        EXIT 1
      )
      git diff --exit-code --diff-filter=ADR -- . :!onnx/onnx-data.proto :!onnx/onnx-data.proto3
      IF NOT %ERRORLEVEL% EQU 0 (
        @echo "Test generation returned failures. Please check the number of node test files (input_*.pb or output_*.pb)."
        EXIT 1
      )

      pip uninstall -y pillow
      python onnx/backend/test/cmd_tools.py generate-data --clean
      git status
      git diff --exit-code -- . :!onnx/onnx-data.proto :!onnx/onnx-data.proto3 :!*output_*.pb :!*input_*.pb
      IF NOT %ERRORLEVEL% EQU 0 (
        @echo "git diff for test generation without pillow returned failures. Please check updated node test files"
        EXIT 1
      )

      rm -rf .setuptools-cmake-build
      if '$(protobuf_type)' == 'External' (
        conda install -y -c conda-forge libprotobuf=3.20
      )
    displayName: Install and test ONNX

  - script: |
      if '$(protobuf_type)' == 'External' (
        call activate py$(python.version)
        python -m pip install protobuf==3.20.2

        set ONNX_BUILD_TESTS=1
        set ONNX_ML=$(onnx_ml)
        set CMAKE_ARGS=-DONNX_USE_PROTOBUF_SHARED_LIBS=ON -DONNX_USE_LITE_PROTO=ON -DONNX_WERROR=ON
        python -m pip install -r requirements-release.txt
        pip uninstall -y onnx
        pip install .

        pytest -n auto --dist loadscope
        IF NOT %ERRORLEVEL% EQU 0 (
          @echo "pytest failed when testing onnx with libprotobuf=3.20"
          EXIT 1
        )
      ) else (
        REM Skip the test for externally installing lower version of Protobuf.
      )
    displayName: Test Protobuf 3.20 from conda-forge
