# Copyright (c) ONNX Project Contributors
#
# SPDX-License-Identifier: Apache-2.0

name: sdistRelease

on: 
  workflow_call:  # Indicates that this is a reusable workflow
    inputs:
      os:
        required: true
        type: string
      build_mode:
        required: true
        type: string

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name == 'workflow_dispatch' }}-sdist

jobs:
  build:
    if: github.event_name != 'pull_request' || startsWith( github.base_ref, 'rel-') || contains( github.event.pull_request.labels.*.name, 'run release CIs')
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ['3.10']
        target-architecture: ['arm64']

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
        submodules: true
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install -q --upgrade pip
        python -m pip install -q -r requirements-release.txt

    - name: Build source distribution (preview build / weekly)
      if: ${{ inputs.build_mode != 'release' }}
      run: |
        git clean -xdf
        sed -i 's/name = "onnx"/name = "onnx-weekly"/' 'pyproject.toml'
        ONNX_PREVIEW_BUILD=1 python -m build --sdist

    - name: Build source distribution (for release)
      if: ${{ inputs.build_mode == 'release' }}
      run: |
        git clean -xdf
        python -m build --sdist

    - name: Upload sdist
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
      with:
        name: sdist
        path: |
            ./dist/*.tar.gz
