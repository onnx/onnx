# Copyright (c) ONNX Project Contributors
#
# SPDX-License-Identifier: Apache-2.0

name: LinuxRelease_x86_64

on:
  workflow_call:  # Indicates that this is a reusable workflow
    inputs:
      os:
        required: true
        type: string

permissions:  # set top-level default permissions as security best practice
  contents: read

jobs:
  build:
    if: github.event_name != 'pull_request' || startsWith( github.base_ref, 'rel-') || contains( github.event.pull_request.labels.*.name, 'run release CIs')
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        architecture: ['x64']

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: true
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Build manylinux2014_x86_64
      id: build_manylinux
      uses: docker://quay.io/pypa/manylinux2014_x86_64:latest
      with:
        entrypoint: bash
        args: .github/workflows/manylinux/entrypoint.sh ${{ matrix.python-version }} manylinux2014_x86_64 ${{ github.event_name }}

    - name: Set up Python ${{ matrix.python-version }}
      if: steps.build_manylinux.outcome == 'success'
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install Python dependencies
      if: steps.build_manylinux.outcome == 'success'
      run: |
        python -m pip install -q --upgrade pip
        python -m pip install -q -r requirements-release.txt

    - name: Install protobuf in the GitHub Action environment for testing the wheel
      if: steps.build_manylinux.outcome == 'success'
      run: |
        source workflow_scripts/protobuf/build_protobuf_unix.sh $(nproc)

    - name: Test wheel with Python ${{ matrix.python-version }}
      if: steps.build_manylinux.outcome == 'success'
      run: |
        python -m pip install dist/*manylinux2014_x86_64.whl
        pytest

    - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
      if: steps.build_manylinux.outcome == 'success'
      with:
        name: wheels-${{ inputs.os }}-${{ matrix.python-version }}
        path: |
            ./dist/*.whl

    - name: TEST_HUB=1 pytest
      if: (github.event_name == 'schedule') && (steps.build_manylinux.outcome == 'success') # Only triggered by weekly event
      run: |
        TEST_HUB=1 pytest

    - name: Verify ONNX with the latest numpy
      if: (steps.build_manylinux.outcome == 'success') && ${{ always() }}
      run: |
        python -m pip uninstall -y numpy onnx && python -m pip install numpy
        python -m pip install dist/*manylinux2014_x86_64.whl
        pytest

    - name: Verify ONNX with the latest protobuf
      if: (steps.build_manylinux.outcome == 'success') && ${{ always() }}
      run: |
        python -m pip uninstall -y protobuf onnx && python -m pip install protobuf
        python -m pip install dist/*manylinux2014_x86_64.whl
        pytest

    - name: Verify ONNX with the minimumly supported packages
      if: (steps.build_manylinux.outcome == 'success') && ${{ always() }}
      run: |
        python -m pip uninstall -y numpy protobuf onnx && python -m pip install -r requirements-min.txt
        python -m pip install dist/*manylinux2014_x86_64.whl
        pytest
