name: WindowsRelease

on:
  schedule:
    # Run weekly on Monday 00:00
    - cron:  '00 00 * * MON'
  push:
    branches: [master, rel-*]
  pull_request:
    branches: [rel-*]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
        architecture: ['x64', 'x86']
    steps:         
    - name: Checkout Protobuf 
      uses: actions/checkout@master
      with:
        repository: protocolbuffers/protobuf
        ref: refs/tags/v3.11.3
        path: ./protobuf_root/protobuf
  
    - name: Checkout Protobuf submodules
      shell: bash
      run: |
         cd ./protobuf_root/protobuf
         auth_header="$(git config --local --get http.https://github.com/.extraheader)"
         git submodule sync --recursive
         git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
        
    - name: Checkout ONNX
      uses: actions/checkout@v2
      with:
         path: ./onnx

    - name: Checkout ONNX submodules
      shell: bash
      run: |
         cd onnx
         auth_header="$(git config --local --get http.https://github.com/.extraheader)"
         git submodule sync --recursive
         git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}    
          
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy==1.16.6 wheel          
            
    - name: Build ONNX wheel
      run: |        
        $arch = 'x64'
        if ('${{ matrix.architecture }}' -eq 'x86') {
          $arch = 'Win32'
        }
        echo "Install protobuf"
        cd ./protobuf_root
        $protobuf_root_dir = Get-Location
        mkdir protobuf_install
        cd ./protobuf/cmake

        cmake -G "Visual Studio 16 2019" -A $arch -DCMAKE_INSTALL_PREFIX="../../protobuf_install" -DCMAKE_BUILD_TYPE=Release -Dprotobuf_MSVC_STATIC_RUNTIME=ON -DProtobuf_USE_STATIC_LIBS=ON -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_BUILD_EXAMPLES=OFF .
        msbuild protobuf.sln /m /p:Configuration=Release
        msbuild INSTALL.vcxproj /p:Configuration=Release
        echo "Protobuf installation complete."

        echo "Set paths"
        $protoc_path = Join-Path -Path $protobuf_root_dir -ChildPath "protobuf_install\bin"
        $protoc_lib_path = Join-Path -Path $protobuf_root_dir -ChildPath "protobuf_install\lib"
        $protobuf_include_path = Join-Path -Path $protobuf_root_dir -ChildPath "protobuf_install\include"
        $Env:PATH="$ENV:PATH;$protoc_path;$protoc_lib_path;$protobuf_include_path"
        $($Env:PATH).Split(';')
        protoc

        cd ../../../onnx
        dir
        echo "Install ONNX"
        $Env:USE_MSVC_STATIC_RUNTIME=1
        $Env:ONNX_ML=1
        $Env:CMAKE_ARGS="-DONNX_USE_PROTOBUF_SHARED_LIBS=OFF -DProtobuf_USE_STATIC_LIBS=ON -DONNX_USE_LITE_PROTO=ON"

        if ('${{ github.event_name }}' -eq 'schedule') {
          echo "Build weekly TestPyPI package"
          python setup.py bdist_wheel --weekly_build
        } else {
          python setup.py bdist_wheel
        }
        Get-ChildItem -Path dist/*.whl | foreach {pip install --upgrade $_.fullname} 
  

    - name: Test the installed wheel
      run: |
        cd onnx
        python -m pip install -q pytest==5.4.3 nbval
        pytest

    - name: Test the uploaded backend test data
      run: |
        cd onnx
        # onnx.checker all existing backend data
        python workflow_scripts\test_generated_backend.py
        # onnx.checker all generated backend data
        python onnx\backend\test\cmd_tools.py generate-data
        python workflow_scripts\test_generated_backend.py

    - uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: ./onnx/dist
  
    - name: Upload wheel to TestPyPI weekly
      if: (github.event_name == 'schedule') # Only triggered by weekly event
      run: |
        python -m pip install -q twine
        twine upload --verbose onnx/dist/*.whl --repository-url https://test.pypi.org/legacy/ -u ${{ secrets.TESTPYPI_USERNAME }} -p ${{ secrets.TESTPYPI_PASSWORD }}
