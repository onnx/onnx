// Copyright (c) ONNX Project Contributors.
// Licensed under the MIT license.

syntax = "proto2";

package {PACKAGE_NAME};
import "onnx/onnx.proto";

// This file contains the proto definitions for MapProto and
// SequenceProto. These protos are used to represent the data structures
// of maps and sequences in test data or can be used by ModelProto.

// Sequences
//
// Defines a dense, ordered, collection of elements that are of homogeneous types.
// Sequences can be made out of tensors, maps, or sequences.
message SequenceProto {

  optional string name = 1;

  enum DataType {
    UNDEFINED = 0;
    TENSOR = 1;
    SPARSE_TENSOR = 2;
    SEQUENCE = 3;
    MAP = 4;
  }

  // The data type of the element.
  // This field MUST have a valid SequenceProto.DataType value
  optional int32 elem_type = 2;

  // For TensorProto values.
  // When this field is present, the elem_type field MUST be TENSOR.
  optional repeated TensorProto tensor_values = 3;

  // For SparseTensorProto values.
  // When this field is present, the elem_type field MUST be SPARSE_TENSOR.
  optional repeated SparseTensorProto sparse_tensor_values = 4;

  // For SequenceProto values, allowing sequences to be of themselves.
  // When this field is present, the elem_type field MUST be SEQUENCE.
  optional repeated SequenceProto sequence_values = 5;

  // For MapProto values.
  // When this field is present, the elem_type field MUST be MAP.
  optional repeated MapProto map_values = 6;

}


// Maps
//
// Specifies an associative table, defined by a key type and a value type.
message MapProto {

  optional string name = 1;

  // All MapProto data types must have the same length of keys and values.

  // The data type of the key.
  // This field MUST have a valid TensorProto.DataType value of
  // INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING
  optional int32 key_type = 2;

  // Every element of keys has to be a tensor of one of the following data types
  // INT8, INT16, INT32, INT64, UINT8, UINT16, UINT32, UINT64, or STRING
  SequenceProto keys = 3;

  // The data type of the value.
  // This field MUST have a valid SequenceProto.DataType value of
  // TENSOR, SPARSE_TENSOR, MAP, SEQUENCE
  optional int32 value_type = 4;

  SequenceProto values = 5;
}
